---

ansible_influx_url: "http://localhost:8086"
ansible_influx_timeout: 120

# Ansible variable to force recreate continuous queries
# recreate_cqs=yes

# you need to overwrite this with your own definition:
ansible_influx_databases:
  level_0:
    name: "telegraf"
    retention_policy: { amount: "0", unit: "s", name: "autogen" }

# Predefined set of queries for standard telegraf inputs
# You can overwrite these selectively with the variable "my_ansible_influx_queries"
# Use the same structure as below.

# Attention!
# columns have to be named explicitly, otherwise influxdb will prepend the aggregation
# method name (e.g. mean(usage_user) -> mean_usage_user)
# see https://github.com/influxdata/influxdb/issues/7332
ansible_influx_queries:
  cpu: >
    SELECT mean(usage_guest) AS usage_guest, mean(usage_guest_nice) AS usage_guest_nice, mean(usage_idle) AS usage_idle
    , mean(usage_irq) AS usage_irq, mean(usage_iowait) AS usage_iowait, mean(usage_nice) AS usage_nice
    , mean(usage_softirq) AS usage_softirq, mean(usage_steal) AS usage_steal, mean(usage_system) AS usage_system
    , mean(usage_user) AS usage_user
  mem: >
    SELECT mean(active) AS active, mean(available) AS available, mean(available_percent) AS available_percent
    , mean(buffered) AS buffered, mean(cached) AS cached, mean(free) AS free, mean(inactive) AS inactive
    , mean(slab) AS slab, mean(total) AS total, mean(used) AS used, mean(used_percent) AS used_percent
    , mean(wired) AS wired
  disk: >
    SELECT mean(free) AS free, mean(total) AS total, mean(used) AS used, mean(used_percent) AS used_percent
    , mean(inodes_free) AS inodes_free, mean(inodes_total) AS inodes_total, mean(inodes_used) AS inodes_used
  swap: >
    SELECT mean(free) AS free, mean("in") AS "in", mean("out") AS "out", mean(total) AS total, mean(used) AS used
    , mean(used_percent) AS used_percent
  diskio: >
    SELECT max(io_time) AS io_time, mean(iops_in_progress) AS iops_in_progress, max(read_bytes) as read_bytes
    , max(read_time) AS read_time, max(reads) AS reads, max(weighted_io_time) AS weighted_io_time
    , max(write_bytes) AS write_bytes, max(write_time) AS write_time, max(writes) AS writes
  kernel: >
    SELECT mean(boottime) AS boottime, max(context_switches) AS context_switches, mean(entropy_avail) AS entropy_avail
    , max(interrupts) AS interrupts, max(processes_forked) AS processes_forked
  processes: >
    SELECT mean(blocked) AS blocked, mean(dead) AS dead, mean(idle) AS idle, mean(paging) AS paging
    , mean(running) AS running, mean(sleeping) AS sleeping, mean(stopped) AS stopped, mean(total) AS total
    , mean(total_threads) AS total_threads, mean(unknown) AS unknown, mean(zombies) AS zombies
  system: >
    SELECT mean(load1) AS load1, mean(load15) AS load15, mean(load5) AS load5, mean(n_cpus) AS n_cpus
    , mean(n_users) AS n_users, max(uptime) AS uptime, last(update_format) AS update_format
  net: >
    SELECT max(bytes_recv) AS bytes_recv, max(bytes_sent) AS bytes_sent, mean(drop_in) AS drop_in
    , mean(drop_out) AS drop_out, mean(err_in) AS err_in, mean(err_out) AS err_out
    , mean(icmp_inaddrmaskreps) AS icmp_inaddrmaskreps, mean(icmp_inaddrmasks) AS icmp_inaddrmasks
    , mean(icmp_incsumerrors) AS icmp_incsumerrors, mean(icmp_indestunreachs) AS icmp_indestunreachs
    , mean(icmp_inechoreps) AS icmp_inechoreps, mean(icmp_inechos) AS icmp_inechos, mean(icmp_inerrors) AS icmp_inerrors
    , mean(icmp_inmsgs) AS icmp_inmsgs, mean(icmp_inparmprobs) AS icmp_inparmprobs
    , mean(icmp_inredirects) AS icmp_inredirects, mean(icmp_insrcquenchs) AS icmp_insrcquenchs
    , mean(icmp_intimeexcds) AS icmp_intimeexcds, mean(icmp_intimestampreps) AS icmp_intimestampreps
    , mean(icmp_intimestamps) AS icmp_intimestamps, mean(icmp_outaddrmaskreps) AS icmp_outaddrmaskreps
    , mean(icmp_outaddrmasks) AS icmp_outaddrmasks, mean(icmp_outdestunreachs) AS icmp_outdestunreachs
    , mean(icmp_outechoreps) AS icmp_outechoreps, mean(icmp_outechos) AS icmp_outechos
    , mean(icmp_outerrors) AS icmp_outerrors, mean(icmp_outmsgs) AS icmp_outmsgs
    , mean(icmp_outparmprobs) AS icmp_outparmprobs, mean(icmp_outredirects) AS icmp_outredirects
    , mean(icmp_outsrcquenchs) AS icmp_outsrcquenchs, mean(icmp_outtimeexcds) AS icmp_outtimeexcds
    , mean(icmp_outtimestampreps) AS icmp_outtimestampreps, mean(icmp_outtimestamps) AS icmp_outtimestamps
    , mean(icmpmsg_intype0) AS icmpmsg_intype0, mean(icmpmsg_intype11) AS icmpmsg_intype11
    , mean(icmpmsg_intype3) AS icmpmsg_intype3, mean(icmpmsg_intype4) AS icmpmsg_intype4
    , mean(icmpmsg_intype5) AS icmpmsg_intype5, mean(icmpmsg_intype8) AS icmpmsg_intype8
    , mean(icmpmsg_outtype0) AS icmpmsg_outtype0, mean(icmpmsg_outtype11) AS icmpmsg_outtype11
    , mean(icmpmsg_outtype3) AS icmpmsg_outtype3, mean(icmpmsg_outtype5) AS icmpmsg_outtype5
    , mean(icmpmsg_outtype8) AS icmpmsg_outtype8, mean(ip_defaultttl) AS ip_defaultttl
    , mean(ip_forwarding) AS ip_forwarding, mean(ip_forwdatagrams) AS ip_forwdatagrams
    , mean(ip_fragcreates) AS ip_fragcreates, mean(ip_fragfails) AS ip_fragfails, mean(ip_fragoks) AS ip_fragoks
    , mean(ip_inaddrerrors) AS ip_inaddrerrors, mean(ip_indelivers) AS ip_indelivers
    , mean(ip_indiscards) AS ip_indiscards, mean(ip_inhdrerrors) AS ip_inhdrerrors, mean(ip_inreceives) AS ip_inreceives
    , mean(ip_inunknownprotos) AS ip_inunknownprotos, mean(ip_outdiscards) AS ip_outdiscards
    , mean(ip_outnoroutes) AS ip_outnoroutes, mean(ip_outrequests) AS ip_outrequests
    , mean(ip_reasmfails) AS ip_reasmfails, mean(ip_reasmoks) AS ip_reasmoks, mean(ip_reasmreqds) AS ip_reasmreqds
    , mean(ip_reasmtimeout) AS ip_reasmtimeout, mean(packets_recv) AS packets_recv, mean(packets_sent) AS packets_sent
    , mean(tcp_activeopens) AS tcp_activeopens, mean(tcp_attemptfails) AS tcp_attemptfails
    , mean(tcp_currestab) AS tcp_currestab, mean(tcp_estabresets) AS tcp_estabresets
    , mean(tcp_incsumerrors) AS tcp_incsumerrors, mean(tcp_inerrs) AS tcp_inerrs, mean(tcp_insegs) AS tcp_insegs
    , mean(tcp_maxconn) AS tcp_maxconn, mean(tcp_outrsts) AS tcp_outrsts, mean(tcp_outsegs) AS tcp_outsegs
    , mean(tcp_passiveopens) AS tcp_passiveopens, mean(tcp_retranssegs) AS tcp_retranssegs
    , mean(tcp_rtoalgorithm) AS tcp_rtoalgorithm, mean(tcp_rtomax) AS tcp_rtomax, mean(tcp_rtomin) AS tcp_rtomin
    , mean(udp_ignoredmulti) AS udp_ignoredmulti, mean(udp_incsumerrors) AS udp_incsumerrors
    , mean(udp_indatagrams) AS udp_indatagrams, mean(udp_inerrors) AS udp_inerrors, mean(udp_noports) AS udp_noports
    , mean(udp_outdatagrams) AS udp_outdatagrams, mean(udp_rcvbuferrors) AS udp_rcvbuferrors
    , mean(udp_sndbuferrors) AS udp_sndbuferrors, mean(udplite_ignoredmulti) AS udplite_ignoredmulti
    , mean(udplite_incsumerrors) AS udplite_incsumerrors, mean(udplite_indatagrams) AS udplite_indatagrams
    , mean(udplite_inerrors) AS udplite_inerrors, mean(udplite_noports) AS udplite_noports
    , mean(udplite_outdatagrams) AS udplite_outdatagrams, mean(udplite_rcvbuferrors) AS udplite_rcvbuferrors
    , mean(udplite_sndbuferrors) AS udplite_sndbuferrors
  netstat: >
    SELECT mean(tcp_close) AS tcp_close, mean(tcp_close_wait) AS tcp_close_wait, mean(tcp_closing) AS tcp_closing
    , mean(tcp_established) AS tcp_established, mean(tcp_fin_wait1) AS tcp_fin_wait1
    , mean(tcp_fin_wait2) AS tcp_fin_wait2, mean(tcp_last_ack) AS tcp_last_ack, mean(tcp_listen) AS tcp_listen
    , mean(tcp_none) AS tcp_none, mean(tcp_syn_recv) AS tcp_syn_recv, mean(tcp_syn_sent) AS tcp_syn_sent
    , mean(tcp_time_wait) AS tcp_time_wait, mean(udp_socket) AS udp_socket
  nstat: >
    SELECT mean(Ip6InDiscards) AS Ip6InDiscards, mean(Ip6InOctets) AS Ip6InOctets, mean(Ip6InReceives) AS Ip6InReceives
    , mean(Ip6OutNoRoutes) AS Ip6OutNoRoutes, mean(IpDefaultTTL) AS IpDefaultTTL
    , mean(IpExtInNoECTPkts) AS IpExtInNoECTPkts, mean(IpExtInOctets) AS IpExtInOctets
    , mean(IpExtOutOctets) AS IpExtOutOctets, mean(IpForwarding) AS IpForwarding, mean(IpInDelivers) AS IpInDelivers
    , mean(IpInReceives) AS IpInReceives, mean(IpOutRequests) AS IpOutRequests, mean(TcpActiveOpens) AS TcpActiveOpens
    , mean(TcpCurrEstab) AS TcpCurrEstab, mean(TcpExtTCPHPAcks) AS TcpExtTCPHPAcks
    , mean(TcpExtTCPHPHits) AS TcpExtTCPHPHits, mean(TcpExtTCPPureAcks) AS TcpExtTCPPureAcks, mean(TcpExtTW) AS TcpExtTW
    , mean(TcpInSegs) AS TcpInSegs, mean(TcpMaxConn) AS TcpMaxConn, mean(TcpOutSegs) AS TcpOutSegs
    , mean(TcpRtoAlgorithm) AS TcpRtoAlgorithm, mean(TcpRtoMax) AS TcpRtoMax, mean(TcpRtoMin) AS TcpRtoMin
    , mean(UdpInDatagrams) AS UdpInDatagrams, mean(UdpOutDatagrams) AS UdpOutDatagrams
  ping: >
    SELECT max(maximum_response_ms) AS maximum_response_ms, mean(average_response_ms) AS average_response_ms
    , min(minimum_response_ms) AS minimum_response_ms, mean(packets_received) AS packets_received
    , mean(packets_transmitted) AS packets_transmitted, mean(percent_packet_loss) AS percent_packet_loss
    , median(result_code) AS result_code, mean(standard_deviation_ms) AS standard_deviation_ms
  procstat: >
    SELECT mean(cpu_time_guest) AS cpu_time_guest, mean(cpu_time_guest_nice) AS cpu_time_guest_nice
    , mean(cpu_time_idle) AS cpu_time_idle, mean(cpu_time_iowait) AS cpu_time_iowait, mean(cpu_time_irq) AS cpu_time_irq
    , mean(cpu_time_nice) AS cpu_time_nice, mean(cpu_time_soft_irq) AS cpu_time_soft_irq
    , mean(cpu_time_steal) AS cpu_time_steal, mean(cpu_time_stolen) AS cpu_time_stolen
    , mean(cpu_time_system) AS cpu_time_system, mean(cpu_time_user) AS cpu_time_user, mean(cpu_usage) AS cpu_usage
    , mean(involuntary_context_switches) AS involuntary_context_switches, mean(memory_rss) AS memory_rss
    , mean(memory_swap) AS memory_swap, mean(memory_vms) AS memory_vms, mean(num_fds) AS num_fds
    , mean(num_threads) AS num_threads, mean(voluntary_context_switches) AS voluntary_context_switches
  influxdb: >
    SELECT mean(n_shards) AS n_shards
  influxdb_cq: >
    SELECT mean(queryFail) AS queryFail, mean(queryOk) AS queryOk
  influxdb_database: >
    SELECT mean(numMeasurements) AS numMeasurements, mean(numSeries) AS numSeries
  influxdb_httpd: >
    SELECT mean(authFail) AS authFail, mean(bind) AS bind, mean(clientError) AS clientError, mean(host) AS host
    , mean(pingReq) AS pingReq, mean(pointsWrittenDropped) AS pointsWrittenDropped
    , mean(pointsWrittenFail) AS pointsWrittenFail, mean(pointsWrittenOK) AS pointsWrittenOK
    , mean(promReadReq) AS promReadReq, mean(promWriteReq) AS promWriteReq, mean(queryReq) AS queryReq
    , mean(queryReqDurationNs) AS queryReqDurationNs, mean(queryRespBytes) AS queryRespBytes
    , mean(recoveredPanics) AS recoveredPanics, mean(req) AS req, mean(reqActive) AS reqActive
    , mean(reqDurationNs) AS reqDurationNs, mean(serverError) AS serverError, mean(statusReq) AS statusReq
    , mean(url) AS url, mean(writeReq) AS writeReq, mean(writeReqActive) AS writeReqActive
    , mean(writeReqBytes) AS writeReqBytes, mean(writeReqDurationNs) AS writeReqDurationNs
  influxdb_memstats:
    SELECT mean(alloc) AS alloc
    , mean(buck_hash_sys) AS buck_hash_sys
    , mean(frees) AS frees
    , mean(gc_sys) AS gc_sys
    , mean(gcc_pu_fraction) AS gcc_pu_fraction
    , mean(heap_alloc) AS heap_alloc
    , mean(heap_idle) AS heap_idle
    , mean(heap_inuse) AS heap_inuse
    , mean(heap_objects) AS heap_objects
    , mean(heap_released) AS heap_released
    , mean(heap_sys) AS heap_sys
    , mean(last_gc) AS last_gc
    , mean(lookups) AS lookups
    , mean(mallocs) AS mallocs
    , mean(mcache_inuse) AS mcache_inuse
    , mean(mcache_sys) AS mcache_sys
    , mean(mspan_inuse) AS mspan_inuse
    , mean(mspan_sys) AS mspan_sys
    , mean(next_gc) AS next_gc
    , mean(num_gc) AS num_gc
    , mean(other_sys) AS other_sys
    , mean(pause_ns) AS pause_ns
    , mean(pause_total_ns) AS pause_total_ns
    , mean(stack_inuse) AS stack_inuse
    , mean(stack_sys) AS stack_sys
    , mean(sys) AS sys
    , mean(total_alloc) AS total_alloc
  influxdb_queryExecutor:
    SELECT mean(queriesActive) AS queriesActive, mean(queriesExecuted) AS queriesExecuted
    , mean(queriesFinished) AS queriesFinished, mean(queryDurationNs) AS queryDurationNs
    , mean(recoveredPanics) AS recoveredPanics
  influxdb_runtime:
    SELECT mean(Alloc) AS Alloc, mean(Frees) AS Frees, mean(HeapAlloc) AS HeapAlloc, mean(HeapIdle) AS HeapIdle
    , mean(HeapInUse) AS HeapInUse, mean(HeapObjects) AS HeapObjects, mean(HeapReleased) AS HeapReleased
    , mean(HeapSys) AS HeapSys, mean(Lookups) AS Lookups, mean(Mallocs) AS Mallocs, mean(NumGC) AS NumGC
    , mean(NumGoroutine) AS NumGoroutine, mean(PauseTotalNs) AS PauseTotalNs, mean(Sys) AS Sys
    , mean(TotalAlloc) AS TotalAlloc
  influxdb_shard:
    SELECT mean(diskBytes) AS diskBytes, mean(fieldsCreate) AS fieldsCreate
    , mean(seriesCreate) AS seriesCreate, mean(writeBytes) AS writeBytes
    , mean(writePointsDropped) AS writePointsDropped, mean(writePointsErr) AS writePointsErr
    , mean(writePointsOk) AS writePointsOk, mean(writeReq) AS writeReq, mean(writeReqErr) AS writeReqErr
    , mean(writeReqOk) AS writeReqOk
  influxdb_subscriber:
    SELECT mean(createFailures) AS createFailures, mean(pointsWritten) AS pointsWritten
    , mean(writeFailures) AS writeFailures
  influxdb_tsm1_cache:
    SELECT mean(WALCompactionTimeMs) AS WALCompactionTimeMs, mean(cacheAgeMs) AS cacheAgeMs
    , mean(cachedBytes) AS cachedBytes, mean(diskBytes) AS diskBytes, mean(memBytes) AS memBytes
    , mean(snapshotCount) AS snapshotCount, mean(writeDropped) AS writeDropped
    , mean(writeErr) AS writeErr, mean(writeOk) AS writeOk
  influxdb_tsm1_engine:
    SELECT mean(cacheCompactionDuration) AS cacheCompactionDuration
    , mean(cacheCompactionErr) AS cacheCompactionErr
    , mean(cacheCompactions) AS cacheCompactions
    , mean(cacheCompactionsActive) AS cacheCompactionsActive
    , mean(tsmFullCompactionDuration) AS tsmFullCompactionDuration
    , mean(tsmFullCompactionErr) AS tsmFullCompactionErr
    , mean(tsmFullCompactionQueue) AS tsmFullCompactionQueue
    , mean(tsmFullCompactions) AS tsmFullCompactions
    , mean(tsmFullCompactionsActive) AS tsmFullCompactionsActive
    , mean(tsmLevel1CompactionDuration) AS tsmLevel1CompactionDuration
    , mean(tsmLevel1CompactionErr) AS tsmLevel1CompactionErr
    , mean(tsmLevel1CompactionQueue) AS tsmLevel1CompactionQueue
    , mean(tsmLevel1Compactions) AS tsmLevel1Compactions
    , mean(tsmLevel1CompactionsActive) AS tsmLevel1CompactionsActive
    , mean(tsmLevel2CompactionDuration) AS tsmLevel2CompactionDuration
    , mean(tsmLevel2CompactionErr) AS tsmLevel2CompactionErr
    , mean(tsmLevel2CompactionQueue) AS tsmLevel2CompactionQueue
    , mean(tsmLevel2Compactions) AS tsmLevel2Compactions
    , mean(tsmLevel2CompactionsActive) AS tsmLevel2CompactionsActive
    , mean(tsmLevel3CompactionDuration) AS tsmLevel3CompactionDuration
    , mean(tsmLevel3CompactionErr) AS tsmLevel3CompactionErr
    , mean(tsmLevel3CompactionQueue) AS tsmLevel3CompactionQueue
    , mean(tsmLevel3Compactions) AS tsmLevel3Compactions
    , mean(tsmLevel3CompactionsActive) AS tsmLevel3CompactionsActive
    , mean(tsmOptimizeCompactionDuration) AS tsmOptimizeCompactionDuration
    , mean(tsmOptimizeCompactionErr) AS tsmOptimizeCompactionErr
    , mean(tsmOptimizeCompactionQueue) AS tsmOptimizeCompactionQueue
    , mean(tsmOptimizeCompactions) AS tsmOptimizeCompactions
    , mean(tsmOptimizeCompactionsActive) AS tsmOptimizeCompactionsActive
  influxdb_tsm1_filestore:
    SELECT mean(diskBytes) AS diskBytes, mean(numFiles) AS numFiles
  influxdb_tsm1_wal:
    SELECT mean(currentSegmentDiskBytes) AS currentSegmentDiskBytes
    , mean(oldSegmentsDiskBytes) AS oldSegmentsDiskBytes, mean(writeErr) AS writeErr, mean(writeOk) AS writeOk
  influxdb_write:
    SELECT mean(pointReq) AS pointReq, mean(pointReqLocal) AS pointReqLocal, mean(req) AS req
    , mean(subWriteDrop) AS subWriteDrop, mean(subWriteOk) AS subWriteOk, mean(writeDrop) AS writeDrop
    , mean(writeError) AS writeError, mean(writeOk) AS writeOk, mean(writeTimeout) AS writeTimeout
  docker: >
    SELECT mean(n_containers) AS n_containers, mean(n_containers_paused) AS n_containers_paused
    , mean(n_containers_running) AS n_containers_running, mean(n_containers_stopped) AS n_containers_stopped
    , mean(n_cpus) AS n_cpus, mean(n_goroutines) AS n_goroutines, mean(n_images) AS n_images
    , mean(n_listener_events) AS n_listener_events, mean(n_used_file_descriptors) AS n_used_file_descriptors
  docker_container_blkio: >
    SELECT mean(io_merged_recursive_async) AS io_merged_recursive_async
    , mean(io_merged_recursive_read) AS io_merged_recursive_read
    , mean(io_merged_recursive_sync) AS io_merged_recursive_sync
    , mean(io_merged_recursive_total) AS io_merged_recursive_total
    , mean(io_merged_recursive_write) AS io_merged_recursive_write
    , mean(io_queue_recursive_async) AS io_queue_recursive_async
    , mean(io_queue_recursive_read) AS io_queue_recursive_read
    , mean(io_queue_recursive_sync) AS io_queue_recursive_sync
    , mean(io_queue_recursive_total) AS io_queue_recursive_totali
    , mean(io_queue_recursive_write) AS io_queue_recursive_write
    , mean(io_service_bytes_recursive_async) AS io_service_bytes_recursive_async
    , mean(io_service_bytes_recursive_read) AS io_service_bytes_recursive_read
    , mean(io_service_bytes_recursive_sync) AS io_service_bytes_recursive_sync
    , mean(io_service_bytes_recursive_total) AS io_service_bytes_recursive_total
    , mean(io_service_bytes_recursive_write) AS io_service_bytes_recursive_write
    , mean(io_service_time_recursive_async) AS io_service_time_recursive_async
    , mean(io_service_time_recursive_read) AS io_service_time_recursive_read
    , mean(io_service_time_recursive_sync) AS io_service_time_recursive_sync
    , mean(io_service_time_recursive_total) AS io_service_time_recursive_total
    , mean(io_service_time_recursive_write) AS io_service_time_recursive_write
    , mean(io_serviced_recursive_async) AS io_serviced_recursive_async
    , mean(io_serviced_recursive_read) AS io_serviced_recursive_read
    , mean(io_serviced_recursive_sync) AS io_serviced_recursive_sync
    , mean(io_serviced_recursive_total) AS io_serviced_recursive_total
    , mean(io_serviced_recursive_write) AS io_serviced_recursive_write
    , mean(io_time_recursive) AS io_time_recursive
    , mean(io_wait_time_async) AS io_wait_time_async
    , mean(io_wait_time_read) AS io_wait_time_read
    , mean(io_wait_time_sync) AS io_wait_time_sync
    , mean(io_wait_time_total) AS io_wait_time_total
    , mean(io_wait_time_write) AS io_wait_time_write
    , mean(sectors_recursive) AS sectors_recursive
  docker_container_cpu: >
    SELECT mean(throttling_periods) AS throttling_periods
    , mean(throttling_throttled_periods) AS throttling_throttled_periods
    , mean(throttling_throttled_time) AS throttling_throttled_time, mean(usage_in_kernelmode) AS usage_in_kernelmode
    , mean(usage_in_usermode) AS usage_in_usermode, mean(usage_percent) AS usage_percent
    , mean(usage_system) AS usage_system, mean(usage_total) AS usage_total
  docker_container_health: >
    SELECT last(health_status) AS health_status, last(failing_streak) AS failing_streak
  docker_container_mem: >
    SELECT mean(active_anon) AS active_anon, mean(active_file) AS active_file, mean(cache) AS cache
    , mean(fail_count) AS fail_count, mean(hierarchical_memory_limit) AS hierarchical_memory_limit
    , mean(inactive_anon) AS inactive_anon, mean(inactive_file) AS inactive_file, mean("limit") AS "limit"
    , mean(mapped_file) AS mapped_file, mean(max_usage) AS max_usage, mean(pgfault) AS pgfault
    , mean(pgmajfault) AS pgmajfault, mean(pgpgin) AS pgpgin, mean(pgpgout) AS pgpgout, mean(rss) AS rss
    , mean(rss_huge) AS rss_huge, mean(total_active_anon) AS total_active_anon
    , mean(total_active_file) AS total_active_file, mean(total_cache) AS total_cache
    , mean(total_inactive_anon) AS total_inactive_anon, mean(total_inactive_file) AS total_inactive_file
    , mean(total_mapped_file) AS total_mapped_file, mean(total_pgfault) AS total_pgfault
    , mean(total_pgmajfault) AS total_pgmajfault, mean(total_pgpgin) AS total_pgpgin
    , mean(total_pgpgout) AS total_pgpgout, mean(total_rss) AS total_rss, mean(total_rss_huge) AS total_rss_huge
    , mean(total_unevictable) AS total_unevictable, mean(total_writeback) AS total_writeback
    , mean(unevictable) AS unevictable, mean(usage) AS usage, mean(usage_percent) AS usage_percent
    , mean(writeback) AS writeback
  docker_container_net: >
    SELECT mean(rx_bytes) AS rx_bytes, mean(rx_dropped) AS rx_dropped, mean(rx_errors) AS rx_errors
    , mean(rx_packets) AS rx_packets, mean(tx_bytes) AS tx_bytes, mean(tx_dropped) AS tx_dropped
    , mean(tx_errors) AS tx_errors, mean(tx_packets) AS tx_packets
  win_cpu: >
    SELECT
    mean(Percent_DPC_Time) AS Percent_DPC_Time
    , mean(Percent_Idle_Time) AS Percent_Idle_Time
    , mean(Percent_Interrupt_Time) AS Percent_Interrupt_Time
    , mean(Percent_Privileged_Time) AS Percent_Privileged_Time
    , mean(Percent_Processor_Time) AS Percent_Processor_Time
    , mean(Percent_User_Time) AS Percent_User_Time
#    mean("Benutzerzeit_(Percent)") AS "Benutzerzeit_(Percent)"
#    , mean("DPC-Zeit_(Percent)") AS "DPC-Zeit_(Percent)"
#    , mean("Interruptzeit_(Percent)") AS "Interruptzeit_(Percent)"
#    , mean("Leerlaufzeit_(Percent)") AS "Leerlaufzeit_(Percent)"
#    , mean("Privilegierte_Zeit_(Percent)") AS "Privilegierte_Zeit_(Percent)"
#    , mean("Prozessorzeit_(Percent)") AS "Prozessorzeit_(Percent)"
  win_disk: >
    SELECT
    mean(Current_Disk_Queue_Length) AS Current_Disk_Queue_Length
    , mean(Free_Megabytes) AS Free_Megabytes, mean(Percent_Disk_Read_Time) AS Percent_Disk_Read_Time
    , mean(Percent_Disk_Time) AS Percent_Disk_Time, mean(Percent_Disk_Write_Time) AS Percent_Disk_Write_Time
    , mean(Percent_Free_Space) AS Percent_Free_Space, mean(Percent_Idle_Time) AS Percent_Idle_Time
#    mean("Aktuelle_Warteschlangenlänge") AS "Aktuelle_Warteschlangenlänge"
#    , mean("Freier_Speicherplatz_(Percent)") AS "Freier_Speicherplatz_(Percent)"
#    , mean("Leerlaufzeit_(Percent)") AS "Leerlaufzeit_(Percent)"
#    , mean("Lesezeit_(Percent)") AS "Lesezeit_(Percent)", mean("MB_frei") AS "MB_frei"
#    , mean("Schreibzeit_(Percent)") AS "Schreibzeit_(Percent)", mean("Zeit_(Percent)") AS "Zeit_(Percent)"
  win_diskio: >
    SELECT
    mean(Current_Disk_Queue_Length) AS Current_Disk_Queue_Length, mean(Disk_Read_Bytes_persec) AS Disk_Read_Bytes_persec
    , mean(Disk_Reads_persec) AS Disk_Reads_persec, mean(Disk_Write_Bytes_persec) AS Disk_Write_Bytes_persec
    , mean(Disk_Writes_persec) AS Disk_Writes_persec, mean(Percent_Disk_Read_Time) AS Percent_Disk_Read_Time
    , mean(Percent_Disk_Time) AS Percent_Disk_Time, mean(Percent_Disk_Write_Time) AS Percent_Disk_Write_Time
#    mean("Aktuelle_Warteschlangenlänge") AS "Aktuelle_Warteschlangenlänge"
#    , mean("Bytes_gelesen/s") AS "Bytes_gelesen/s", mean("Bytes_geschrieben/s") AS "Bytes_geschrieben/s"
#    , mean("Lesevorgänge/s") AS "Lesevorgänge/s", mean("Lesezeit_(Percent)") AS "Lesezeit_(Percent)"
#    , mean("Schreibvorgänge/s") AS "Schreibvorgänge/s", mean("Schreibzeit_(Percent)") AS "Schreibzeit_(Percent)"
#    , mean("Zeit_(Percent)") AS "Zeit_(Percent)"
  win_mem: >
    SELECT
    mean(Available_Bytes) AS Available_Bytes
    , mean(Cache_Faults_persec) AS Cache_Faults_persec
    , mean(Demand_Zero_Faults_persec) AS Demand_Zero_Faults_persec
    , mean(Page_Faults_persec) AS Page_Faults_persec
    , mean(Pages_persec) AS Pages_persec
    , mean(Pool_Nonpaged_Bytes) AS Pool_Nonpaged_Bytes
    , mean(Pool_Paged_Bytes) AS Pool_Paged_Bytes
    , mean(Standby_Cache_Core_Bytes) AS Standby_Cache_Core_Bytes
    , mean(Standby_Cache_Normal_Priority_Bytes) AS Standby_Cache_Normal_Priority_Bytes
    , mean(Standby_Cache_Reserve_Bytes) AS Standby_Cache_Reserve_Bytes
    , mean(Transition_Faults_persec) AS Transition_Faults_persec
#    mean("Auslagerungsseiten_(Bytes)") AS "Auslagerungsseiten_(Bytes)", mean("Cachefehler/s") AS "Cachefehler/s"
#    , mean("Nicht-Auslagerungsseiten_(Bytes)") AS "Nicht-Auslagerungsseiten_(Bytes)"
#    , mean("Nullforderungsfehler/s") AS "Nullforderungsfehler/s", mean("Seiten/s") AS "Seiten/s"
#    , mean("Seitenfehler/s") AS "Seitenfehler/s", mean("Standbycache-Kernbytes") AS "Standbycache-Kernbytes"
#    , mean("Standbycache-Reservebytes") AS "Standbycache-Reservebytes"
#    , mean("Standbycache-_Bytes_mit_normaler_Priorität") AS "Standbycache-_Bytes_mit_normaler_Priorität"
#    , mean("Verfügbare_Bytes") AS "Verfügbare_Bytes", mean("Wechselfehler/s") AS "Wechselfehler/s"
  win_net: >
    SELECT
    mean(Bytes_Received_persec) AS Bytes_Received_persec
    , mean(Bytes_Sent_persec) AS Bytes_Sent_persec
    , mean(Packets_Outbound_Discarded) AS Packets_Outbound_Discarded
    , mean(Packets_Outbound_Errors) AS Packets_Outbound_Errors
    , mean(Packets_Received_Discarded) AS Packets_Received_Discarded
    , mean(Packets_Received_Errors) AS Packets_Received_Errors
    , mean(Packets_Received_persec) AS Packets_Received_persec
    , mean(Packets_Sent_persec) AS Packets_Sent_persec
#    mean("Ausgehende_Pakete,_Fehler") AS "Ausgehende_Pakete,_Fehler"
#    , mean("Ausgehende_Pakete,_verworfen") AS "Ausgehende_Pakete,_verworfen"
#    , mean("Bytes_gesendet/s") AS "Bytes_gesendet/s"
#    , mean("Empfangene_Bytes/s") AS "Empfangene_Bytes/s"
#    , mean("Empfangene_Pakete,_Fehler") AS "Empfangene_Pakete,_Fehler"
#    , mean("Empfangene_Pakete,_verworfen") AS "Empfangene_Pakete,_verworfen"
#    , mean("Empfangene_Pakete/s") AS "Empfangene_Pakete/s"
#    , mean("Pakete_gesendet/s") AS "Pakete_gesendet/s"
  win_perf_counters: >
    SELECT mean(Bytes_Received_persec) AS Bytes_Received_persec
    , mean(Bytes_Sent_persec) AS Bytes_Sent_persec
    , mean(Packets_Outbound_Discarded) AS Packets_Outbound_Discarded
    , mean(Packets_Outbound_Errors) AS Packets_Outbound_Errors
    , mean(Packets_Received_Discarded) AS Packets_Received_Discarded
    , mean(Packets_Received_Errors) AS Packets_Received_Errors
    , mean(Packets_Received_persec) AS Packets_Received_persec
    , mean(Packets_Sent_persec) AS Packets_Sent_persec
  win_swap: >
    SELECT
    mean(Percent_Usage) AS Percent_Usage
#    mean("Belegung_(Percent)") AS "Belegung_(Percent)"
  win_system: >
    SELECT
    mean(Context_Switches_persec) AS Context_Switches_persec
    , mean(Processor_Queue_Length) AS Processor_Queue_Length
    , mean(System_Calls_persec) AS System_Calls_persec
    , mean(System_Up_Time) AS System_Up_Time
    , mean(Threads) AS Threads
#   mean("Kontextwechsel/s") AS "Kontextwechsel/s"
#    , mean("Prozesse") AS "Prozesse"
#    , mean("Prozessor-Warteschlangenlänge") AS "Prozessor-Warteschlangenlänge"
#    , mean("Systemaufrufe/s") AS "Systemaufrufe/s"
#    , mean("Systembetriebszeit") AS "Systembetriebszeit"
